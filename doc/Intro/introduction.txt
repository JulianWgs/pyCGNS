.. -------------------------------------------------------------------------
.. pyCGNS - CFD General Notation System - 
.. See license.txt file in the root directory of this Python module source  
.. -------------------------------------------------------------------------

Package contents
----------------

The pyCGNS Python module is a collection of 7 modules around the
CGNS standard. Before v4, these modules were independent Python modules
with more or less dependancies to each other. We gather all of them to
have a common build/install/doc and test process, moreover this insures a
better consistency between them.

.. warning:
  pyCGNS is released under the LGPL license
  See file COPYING in the root directory of this Python module source 
  tree for license information. 

The pyCGNS module now includes (former package names)

 VAL,the Validater (pyC5), an XML grammar based validation of a *CGNS/Python*
 tree, for example produced using *MAP* or *PAT*.

 TRA, the Translater (pyCRAB), a set of translators from/to various formats.

 `MAP <MAP/readme.html>`_, the Mapper, new in v4 gives basic load/save 
  function from/to *CGNS/SIDS* and *CGNS/HDF5*.

 DAT, the DataTracer (pyDAX), some DBMS services for *CGNS/HDF5* files.

 `WRA <WRA/readme.html>`_, the Wrapper (pyCGNS), is a *CGNS/MLL* and 
  *CGNS/ADF* Python wrapping.

 `PAT <PAT/readme.html>`_, the PatterMaker, a full *CGNS/SIDS* patterns using
  the *CGNS/Python* mapping.


 `NAV <NAV/readme.html>`_, the Navigater (pyS7), a graphical browser that can
  handle *CGNS/Python*, *CGNS/HDF5* and *CGNS/ADF* file formats.

Quick start
-----------

We want to create a *CGNS/HDF5* file with a simple *base* and a *reference 
state*::

  import CGNS.MAP
  import CGNS.PAT

  T=CGNS.PAT.newCGNS()
  CGNS.PAT.newBase(T,'Test Case 01',3,3) # name, physical dim, topological dim
  CGNS.PAT.newSimulationType(T)
  CGNS.PAT.newReferenceState(T)
  