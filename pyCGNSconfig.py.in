#  -------------------------------------------------------------------------
#  pyCGNS - Python package for CFD General Notation System
#  See license.txt file in the root directory of this Python module source  
#  -------------------------------------------------------------------------
#  $File: pyCGNS/MAPper/setup.py $
#  $Node: 9081ddaefb47 $
#  $Last: v4.0.1 $
#  -------------------------------------------------------------------------
#
# Change these values to fit your installation
# See notes at end of file about config values
#
mylocal='/home/tools/local/x86_64p'

HAS_HDF5              = True

HDF5_VERSION          = '1.8.2'
HDF5_PATH_INCLUDES    = []
HDF5_PATH_LIBRARIES   = []
HDF5_LINK_LIBRARIES   = ['hdf5'] 
HDF5_EXTRA_ARGS       = []

MLL_PATH_LIBRARIES    = []
MLL_LINK_LIBRARIES    = ['cgns']
MLL_PATH_INCLUDES     = []
MLL_VERSION           = '2.5'
MLL_EXTRA_ARGS        = ['-DLEGACY_SUPPORT']

INCLUDE_DIRS =['/home/tools/local/x86_64t/include'] 
INCLUDE_DIRS+=['%s/include'%mylocal]
INCLUDE_DIRS+=['%s/lib/python2.5/site-packages/numpy/core/include'%mylocal]

LIBRARY_DIRS =['/home/tools/local/x86_64t/lib']
LIBRARY_DIRS+=['%s/lib'%mylocal]

NUMPY_VERSION         = '1.4'
NUMPY_PATH_INCLUDES   = []
NUMPY_PATH_LIBRARIES  = []
NUMPY_LINK_LIBRARIES  = []
NUMPY_EXTRA_ARGS      = []

#
# -------------------------------------------------------------------------
# You should not change values beyond this point
#
MAJORVERSION=4
MINORVERSION=0
#
WRA_VERSION='4.0.1'
VAL_VERSION='4.0.1'
MAP_VERSION='4.0.1'
NAV_VERSION='4.0.1'
PAT_VERSION='4.0.1'
DAT_VERSION='4.0.1'
APP_VERSION='4.0.1'
#
#
__version__=MAJORVERSION
__release__=MINORVERSION
__vid__="%d.%d"%(__version__,__release__)
__doc__="""pyCGNS - v%d.%s - Python package for CFD General Notation System"""%(__version__,__release__)
version=__vid__
#
# How config values are set:
# - First this file is imported, a config dictionnary of values is built.
# - Second, depending on module you build, the config file values are
#   used to find required depends. If the values you set cannot solve
#   these depends, we try some hints of our own. If it fails, an error
#   breaks the process. If it succeed, the resulting value overrides
#   your value in the config dictionnary. This latter is stored in the build
#   directory as the second config dictionnary.
# - Any subsequent module build/install first loads the First config dict and
#   then the second config dict.
# - Actually, but dictonnaries are in the same file, but you don't have to
#   care about that:
#   1 pyCGNSconfig.py.in is copied into build/lib/CGNS/pyCGNSconfig.py
#   2 modified values are added at the end of build/lib/CGNS/pyCGNSconfig.py
#
# --- last line of original file
#     lines below are generated
#


